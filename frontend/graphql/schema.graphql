schema {
  query: QueryRoot
  mutation: MutationRoot
}

# Directs the executor to query only when the field exists.
directive @ifdef on FIELD

type FileInfo {
  id: ID!
  filename: String!
  mimetype: String
}

type MutationRoot {
  createTask(newTask: NewTask!): Task!
  singleUpload(file: Upload!): FileInfo!
}

input NewTask {
  name: String!
  imageFolder: String! = ""
  xmlFolder: String! = ""
  labels: [String!]! = []
}

scalar ObjectId

type QueryRoot {
  allUsers: [User!]!
  allTasks: [Task!]!
  getTask(name: String!): Task!
}

type Task {
  id: ObjectId!
  name: String!
  imageFolder: String!
  xmlFolder: String!
  labels: [String!]!
}

scalar Upload

type User {
  id: ObjectId!
  email: String!
  username: String!
}
